(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{377:function(e,t,r){"use strict";r.r(t);var v=r(45),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"object-defineproperty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty"}},[e._v("#")]),e._v(" Object.defineProperty()")]),e._v(" "),r("blockquote",[r("p",[e._v("会直接在一个对象上定义一个新属性或者修改现有属性，并返回这个对象")]),e._v(" "),r("blockquote",[r("p",[e._v("Object.defineProperty(obj, prop, descriptor)")]),e._v(" "),r("p",[e._v("obj：修改的对象")]),e._v(" "),r("p",[e._v("prop: 要定义或修改的属性的名称")]),e._v(" "),r("p",[e._v("descriptor:将被定义或修改的属性描述符")])])]),e._v(" "),r("h3",{attrs:{id:"属性描述符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性描述符"}},[e._v("#")]),e._v(" 属性描述符")]),e._v(" "),r("blockquote",[r("p",[e._v("1.数据描述符")]),e._v(" "),r("p",[e._v("2.存取描述符")]),e._v(" "),r("blockquote",[r("p",[e._v("二者同时具备以下选键值：")]),e._v(" "),r("p",[e._v("1.configurable 为true时，该属性描述符才能够被改变同时也能从对应的对象上被删除")]),e._v(" "),r("p",[e._v("2.enumerable 为true时，该属性才能出现在对象的枚举属性中。")]),e._v(" "),r("p",[e._v("数据描述符同时具备以下可选键值：")]),e._v(" "),r("p",[e._v("1.value 该属性对应的值，可以是对应的js值，默认为undefined")]),e._v(" "),r("p",[e._v("2.writable 为true时，value才能被赋值运算符改变")]),e._v(" "),r("p",[e._v("存取描述符同时具备以下可选键值：")]),e._v(" "),r("p",[e._v("1.get 给属性提供getter的方法，当访问该属性时，该方法会被执行，方法执行时没有参数传入，但是会传入this对象")]),e._v(" "),r("p",[e._v("2.set 给属性提供setter的方法，当属性值修改时，触发执行该方法，该方法将接收唯一参数，即该属性的新的参数值")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);