(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{370:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"浏览器窗口的尺寸-就是内容部分-可以看见的部分-不包括工具栏和滚动条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器窗口的尺寸-就是内容部分-可以看见的部分-不包括工具栏和滚动条"}},[t._v("#")]),t._v(" 浏览器窗口的尺寸(就是内容部分，可以看见的部分，不包括工具栏和滚动条)")]),t._v(" "),a("blockquote",[a("p",[t._v("对于Internet Explorer、Chrome、Firefox、Opera 以及 Safari：")]),t._v(" "),a("blockquote",[a("p",[t._v("window.innerHeight - 浏览器窗口的可见高度\nwindow.innerWidth - 浏览器窗口的可见宽度")])])]),t._v(" "),a("blockquote",[a("p",[t._v("对于 Internet Explorer 8、7、6、5：")]),t._v(" "),a("blockquote",[a("p",[t._v("document.documentElement.clientHeight\ndocument.documentElement.clientWidth\n或者\ndocument.body.clientHeight\ndocument.body.clientWidth")])])]),t._v(" "),a("blockquote",[a("p",[t._v("兼容所有浏览器：")]),t._v(" "),a("blockquote",[a("p",[t._v("var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\nh=window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;")])])]),t._v(" "),a("h2",{attrs:{id:"window-devicepixelratio是设备上物理像素和设备独立像素-device-independent-pixels-dips-的比例。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-devicepixelratio是设备上物理像素和设备独立像素-device-independent-pixels-dips-的比例。"}},[t._v("#")]),t._v(" window.devicePixelRatio是设备上物理像素和设备独立像素(device-independent pixels (dips))的比例。")]),t._v(" "),a("blockquote",[a("blockquote",[a("p",[t._v("公式表示就是：window.devicePixelRatio = 物理像素 / dips")])])]),t._v(" "),a("h2",{attrs:{id:"canvas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas"}},[t._v("#")]),t._v(" canvas")]),t._v(" "),a("blockquote",[a("p",[t._v("特定元素的旋转平移等操作实际上是对整个画布进行了操作，所以如果不对canvas进行save以及restore，那么每一次绘图都会在上一次的基础上进行操作，最后导致错位。比如说你相对于起始点每次30度递增旋转，30，60，90.如果不使用save 以及 restore 就会变成30, 90, 150，每一次在前一次基础上进行了旋转。save是入栈，restore是出栈。")])]),t._v(" "),a("h2",{attrs:{id:"手机端上下滑动是涩的话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手机端上下滑动是涩的话"}},[t._v("#")]),t._v(" 手机端上下滑动是涩的话:")]),t._v(" "),a("blockquote",[a("p",[t._v("-webkit-overflow-scrolling: touch;")])]),t._v(" "),a("h2",{attrs:{id:"防抖与节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖与节流"}},[t._v("#")]),t._v(" 防抖与节流")]),t._v(" "),a("blockquote",[a("p",[t._v("防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间。")])]),t._v(" "),a("blockquote",[a("p",[t._v("节流，多次触发，只执行一次")])]),t._v(" "),a("h2",{attrs:{id:"滚动距离的坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滚动距离的坑"}},[t._v("#")]),t._v(" 滚动距离的坑")]),t._v(" "),a("blockquote",[a("p",[t._v("document.documentElement.scrollTop和document.body.scrollTop在不同浏览器下始终有一个为0，所以可以用这两个的和来求scrollTop的值")])]),t._v(" "),a("h2",{attrs:{id:"使用普通字符串-匹配一个反斜杠-需要再用一个反斜杠来转义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用普通字符串-匹配一个反斜杠-需要再用一个反斜杠来转义"}},[t._v("#")]),t._v(" 使用普通字符串，匹配一个反斜杠，需要再用一个反斜杠来转义：\\")]),t._v(" "),a("h2",{attrs:{id:"解析json字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析json字符串"}},[t._v("#")]),t._v(" 解析json字符串")]),t._v(" "),a("blockquote",[a("p",[t._v("第一种方式，兼容小程序不能使用eval()，以及直接使用JSON.parse()需要严格的json字符串格式，将非标准的json字符串转成标准json字符串 **正则匹配")]),t._v(" "),a("blockquote")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" aaa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{a:1, b:2, c:3}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJSONStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("([\\$\\w]+)\\s*:")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\":'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJSONStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("blockquote",[a("p",[t._v("第二种方式，使用eval()实现")]),t._v(" "),a("blockquote")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" jsonString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("第三种直接使用JSON.parse(),"),a("strong",[t._v("需要标准的 json字符串")])]),t._v(" "),a("blockquote")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("blockquote",[a("p",[t._v("export ---- import { xx }from ''")])]),t._v(" "),a("blockquote",[a("p",[t._v("export default ---   import  xx  from '' **** 不用大括号，可以指定任意名字")])])]),t._v(" "),a("blockquote",[a("p",[t._v("数据类型(7种)")]),t._v(" "),a("blockquote",[a("p",[t._v("原始数据类型\nboolean,null,undefined,number,string,symbol,bigint\n引用数据类型\n对象Object(普通对象-Object、数组对象-Array、正则对象-RegExp、日期对象-Date、数学函数-Math、函数对象-Function)")])])]),t._v(" "),a("blockquote",[a("p",[t._v("0.1+0.2不等于0.3")]),t._v(" "),a("blockquote",[a("p",[t._v("0.1和0.2在转换成二进制后会无限循环，由于标准位数的限制后面多余的位数会被截掉，此时就已经出现了精度的损失，相加后因浮点数小数位的限制而截断的二进制数字在转换为十进制就会变成0.30000000000000004。")])])]),t._v(" "),a("blockquote")])}),[],!1,null,null,null);s.default=e.exports}}]);